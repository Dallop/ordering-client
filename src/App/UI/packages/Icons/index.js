import React from 'react'
import { css } from 'glamor'
import { colors } from '../settings'

export const Place = ({ color, onHover = {}, css: c = {} }) => (
  <svg
    version='1.1'
    xmlns='http://www.w3.org/2000/svg'
    x='0px'
    y='0px'
    width='32px'
    height='32px'
    viewBox='0 0 97.713 97.713'
    {...css({
      fill: color,
      ':hover': onHover,
      enableBackground: `new 0 0 97.713 97.713`,
      ...c
    })}
  >
    <g>
      <path
        d='M48.855,0C29.021,0,12.883,16.138,12.883,35.974c0,5.174,1.059,10.114,3.146,14.684c8.994,19.681,26.238,40.46,31.31,46.359c0.38,0.441,0.934,0.695,1.517,0.695s1.137-0.254,1.517-0.695c5.07-5.898,22.314-26.676,31.311-46.359c2.088-4.57,3.146-9.51,3.146-14.684C84.828,16.138,68.69,0,48.855,0z M48.855,54.659c-10.303,0-18.686-8.383-18.686-18.686c0-10.304,8.383-18.687,18.686-18.687s18.686,8.383,18.686,18.687C67.542,46.276,59.159,54.659,48.855,54.659z'
      />
    </g>
  </svg>
)

export const Time = ({ color, onHover = {}, css: c = {} }) => (
  <svg
    version='1.1'
    xmlns='http://www.w3.org/2000/svg'
    x='0px'
    y='0px'
    width='32px'
    height='32px'
    viewBox='0 0 97.16 97.16'
    {...css({
      fill: color,
      ':hover': onHover,
      enableBackground: `new 0 0 97.16 97.16`,
      ...c
    })}
  >
    <g>
      <g>
        <path
          d='M48.58,0C21.793,0,0,21.793,0,48.58s21.793,48.58,48.58,48.58s48.58-21.793,48.58-48.58S75.367,0,48.58,0z M48.58,86.823c-21.087,0-38.244-17.155-38.244-38.243S27.493,10.337,48.58,10.337S86.824,27.492,86.824,48.58S69.667,86.823,48.58,86.823z'
        />
        <path
          d='M73.898,47.08H52.066V20.83c0-2.209-1.791-4-4-4c-2.209,0-4,1.791-4,4v30.25c0,2.209,1.791,4,4,4h25.832c2.209,0,4-1.791,4-4S76.107,47.08,73.898,47.08z'
        />
      </g>
    </g>
  </svg>
)

export const ShoppingBag = ({ color, onHover, css: c = {} }) => (
  <svg
    version='1.1'
    xmlns='http://www.w3.org/2000/svg'
    x='0px'
    y='0px'
    width='32px'
    height='32px'
    viewBox='0 0 32 32'
    {...css({
      fill: color,
      ':hover': onHover,
      enableBackground: `new 0 0 32 32`,
      ...c
    })}
  >
    <g>
      <g>
        <g>
          <path
            d='M27.996,8.91C27.949,8.395,27.519,8,27,8h-5V6c0-3.309-2.69-6-6-6c-3.309,0-6,2.691-6,6v2H5C4.482,8,4.051,8.395,4.004,8.91l-2,22c-0.025,0.279,0.068,0.557,0.258,0.764C2.451,31.882,2.719,32,3,32h26c0.281,0,0.549-0.118,0.738-0.326c0.188-0.207,0.283-0.484,0.258-0.764L27.996,8.91z M12,6c0-2.206,1.795-4,4-4s4,1.794,4,4v2h-8V6z M4.096,30l1.817-20H10v2.277C9.404,12.624,9,13.262,9,14c0,1.104,0.896,2,2,2s2-0.896,2-2c0-0.738-0.404-1.376-1-1.723V10h8v2.277c-0.596,0.347-1,0.984-1,1.723c0,1.104,0.896,2,2,2c1.104,0,2-0.896,2-2c0-0.738-0.403-1.376-1-1.723V10h4.087l1.817,20H4.096z'
          />
        </g>
      </g>
    </g>
  </svg>
)

export const Close = (
  { color, onHover, css: c = {}, onClick, size = '32px' }
) => (
  <svg
    version='1.1'
    xmlns='http://www.w3.org/2000/svg'
    viewBox='0 0 15.642 15.642'
    width={size}
    height={size}
    onClick={onClick}
    {...css({
      fill: color,
      ':hover': onHover,
      enableBackground: `new 0 0 15.642 15.642`,
      ...c
    })}
  >
    <path
      fillRule='evenodd'
      d='M8.882,7.821l6.541-6.541c0.293-0.293,0.293-0.768,0-1.061  c-0.293-0.293-0.768-0.293-1.061,0L7.821,6.76L1.28,0.22c-0.293-0.293-0.768-0.293-1.061,0c-0.293,0.293-0.293,0.768,0,1.061  l6.541,6.541L0.22,14.362c-0.293,0.293-0.293,0.768,0,1.061c0.147,0.146,0.338,0.22,0.53,0.22s0.384-0.073,0.53-0.22l6.541-6.541  l6.541,6.541c0.147,0.146,0.338,0.22,0.53,0.22c0.192,0,0.384-0.073,0.53-0.22c0.293-0.293,0.293-0.768,0-1.061L8.882,7.821z'
    />
  </svg>
)

export const Cart = (
  { color, onHover, css: c = {}, onClick, size = '24px' }
) => (
  <svg
    version='1.1'
    xmlns='http://www.w3.org/2000/svg'
    x='0px'
    y='0px'
    viewBox='0 0 459.529 459.529'
    height={size}
    onClick={onClick}
    {...css({
      fill: color,
      ':hover': onHover,
      enableBackground: `new 0 0 15.642 15.642`,
      ...c
    })}
  >
    <g>
      <g>
        <path
          d='M17,55.231h48.733l69.417,251.033c1.983,7.367,8.783,12.467,16.433,12.467h213.35c6.8,0,12.75-3.967,15.583-10.2l77.633-178.5c2.267-5.383,1.7-11.333-1.417-16.15c-3.117-4.817-8.5-7.65-14.167-7.65H206.833c-9.35,0-17,7.65-17,17s7.65,17,17,17H416.5l-62.9,144.5H164.333L94.917,33.698c-1.983-7.367-8.783-12.467-16.433-12.467H17c-9.35,0-17,7.65-17,17S7.65,55.231,17,55.231z'
        />
        <path
          d='M135.433,438.298c21.25,0,38.533-17.283,38.533-38.533s-17.283-38.533-38.533-38.533S96.9,378.514,96.9,399.764S114.183,438.298,135.433,438.298z'
        />
        <path
          d='M376.267,438.298c0.85,0,1.983,0,2.833,0c10.2-0.85,19.55-5.383,26.35-13.317c6.8-7.65,9.917-17.567,9.35-28.05c-1.417-20.967-19.833-37.117-41.083-35.7c-21.25,1.417-37.117,20.117-35.7,41.083C339.433,422.431,356.15,438.298,376.267,438.298z'
        />
      </g>
    </g>
  </svg>
)

export const CloseAction = (
  { onClick, color = colors.textOnLight, size = '25px' }
) => (
  <Close
    {...{
      size,
      onClick,
      color,
      css: { cursor: 'pointer', transition: '.2s' },
      onHover: { transform: 'scale(1.1)' }
    }}
  />
)
